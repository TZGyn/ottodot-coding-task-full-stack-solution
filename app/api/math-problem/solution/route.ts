import { gemini } from '@/lib/ai/gemini'
import { generateObject } from 'ai'
import { NextResponse } from 'next/server'
import z from 'zod'

export const POST = async (request: Request) => {
	const body = await request.json()

	const parsed = z
		.object({
			problem_text: z.string(),
			final_answer: z.number(),
		})
		.safeParse(body)

	if (!parsed.success) {
		return NextResponse.json(
			{
				success: false,
				error: {
					message: 'Invalid payload',
				},
			},
			{ status: 400 }
		)
	}

	const { object } = await generateObject({
		model: gemini('gemini-2.0-flash'),
		schema: z.object({
			step_by_step_solution: z.array(z.string()),
		}),
		messages: [
			{
				role: 'system',
				content: `
					You are a mathematic teacher, you will be giving step by step solutions mathematical problems.
					Your students are primary 5, so your steps must be easily digestible and easy to follow so their don't have trouble learning from them.
					Make sure to guide the students to the answer instead of giving them out straight away
					You don't have to address the users as class, this will be shown to one person only

					You will be given the question as well as the correct answer generated by a previous model.
					There might be times where the generated answer is incorrect
				`,
			},
			{
				role: 'user',
				content: [
					{
						text: `
							Question: ${parsed.data.problem_text}
							Answer (generated by gemini): ${parsed.data.final_answer}
						`,
						type: 'text',
					},
				],
			},
		],
	})

	return NextResponse.json({
		step_by_step_solution: object.step_by_step_solution,
	})
}
